{"map":"{\"version\":3,\"sources\":[\"C:/Users/idpar/crc_analysis_tool/ui/src/App.js\",\"C:/Users/idpar/crc_analysis_tool/ui/src/reportWebVitals.js\",\"C:/Users/idpar/crc_analysis_tool/ui/src/index.js\"],\"names\":[\"App\",\"image\",\"setImage\",\"useState\",\"processedImage\",\"setProcessedImage\",\"results\",\"setResults\",\"sendRequest\",\"async\",\"alert\",\"formData\",\"FormData\",\"append\",\"response\",\"axios\",\"post\",\"concat\",\"endpoint\",\"JSON\",\"stringify\",\"data\",\"error\",\"console\",\"React\",\"createElement\",\"className\",\"type\",\"accept\",\"onChange\",\"e\",\"target\",\"files\",\"style\",\"display\",\"id\",\"htmlFor\",\"src\",\"URL\",\"createObjectURL\",\"alt\",\"onClick\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"_ref\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"wOA0EeA,IAAAA,EAtEf,WACE,MAAOC,EAAOC,GAAYC,OAAAA,EAAAA,SAAAA,CAAS,OAC5BC,EAAgBC,GAAqBF,OAAAA,EAAAA,SAAAA,CAAS,OAC9CG,EAASC,GAAcJ,OAAAA,EAAAA,SAAAA,CAAS,gBAQjCK,EAAcC,MAAAA,IAClB,IAAKR,EAEH,YADAS,MAAM,iCAIR,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASZ,GAEzB,IACE,MAAMa,QAAiBC,EAAAA,EAAMC,KAAI,yBAAAC,OAA0BC,GAAYP,GACvEJ,EAAWY,KAAKC,UAAUN,EAASO,KAAM,KAAM,IAC/C,MAAOC,GACPC,QAAQD,MAAMA,GACdf,EAAW,2CAIf,OACIiB,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACbF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,oBACbF,EAAAA,EAAAC,cAAA,QAAA,CACIE,KAAK,OACLC,OAAO,UACPC,SA9BeC,IACzB5B,EAAS4B,EAAEC,OAAOC,MAAM,IACxB3B,EAAkB,MAClBE,EAAW,KA4BD0B,MAAO,CAAEC,QAAS,QAClBC,GAAG,gBAEPX,EAAAA,EAAAC,cAAA,QAAA,CAAOW,QAAQ,cAAcV,UAAU,iBAAgB,cAKzDF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACbF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,eACZzB,EAAQuB,EAAAA,EAAAC,cAAA,MAAA,CAAKY,IAAKC,IAAIC,gBAAgBtC,GAAQuC,IAAI,WAAWd,UAAU,mBAAsB,KAEhGF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,yBACZtB,EAAiBoB,EAAAA,EAAAC,cAAA,MAAA,CAAKY,IAAKjC,EAAgBoC,IAAI,cAAiB,oBAIrEhB,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,sBACbF,EAAAA,EAAAC,cAAA,SAAA,CAAQC,UAAU,iBAAiBe,QAASA,IAAMjC,EAAY,YAAY,WAG1EgB,EAAAA,EAAAC,cAAA,SAAA,CAAQC,UAAU,iBAAiBe,QAASA,IAAMjC,EAAY,eAAe,wBAK/EgB,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,qBACbF,EAAAA,EAAAC,cAAA,KAAA,KAAI,WACJD,EAAAA,EAAAC,cAAA,MAAA,KAAMnB,MCxDDoC,IAAAA,EAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAf,EAAA,GAAAgB,KAAAD,EAAAE,KAAA,KAAA,KAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,EAAAA,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHlC,EAAAA,EAAAC,cAACD,EAAAA,EAAMmC,WAAU,KACfnC,EAAAA,EAAAC,cAACzB,EAAG,QAOR0C\",\"sourcesContent\":[\"import React, { useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\nimport \\\"./App.css\\\";\\n\\nfunction App() {\\n  const [image, setImage] = useState(null);\\n  const [processedImage, setProcessedImage] = useState(null);\\n  const [results, setResults] = useState(\\\"Results data\\\");\\n\\n  const handleImageUpload = (e) => {\\n    setImage(e.target.files[0]);\\n    setProcessedImage(null);\\n    setResults(\\\"\\\");\\n  };\\n\\n  const sendRequest = async (endpoint) => {\\n    if (!image) {\\n      alert(\\\"Please upload an image first!\\\");\\n      return;\\n    }\\n\\n    const formData = new FormData();\\n    formData.append(\\\"image\\\", image);\\n\\n    try {\\n      const response = await axios.post(`http://localhost:5000/${endpoint}`, formData);\\n      setResults(JSON.stringify(response.data, null, 2));\\n    } catch (error) {\\n      console.error(error);\\n      setResults(\\\"Error: Unable to process the request.\\\");\\n    }\\n  };\\n\\n  return (\\n      <div className=\\\"app-container\\\">\\n        <div className=\\\"upload-container\\\">\\n          <input\\n              type=\\\"file\\\"\\n              accept=\\\"image/*\\\"\\n              onChange={handleImageUpload}\\n              style={{ display: \\\"none\\\" }}\\n              id=\\\"file-upload\\\"\\n          />\\n          <label htmlFor=\\\"file-upload\\\" className=\\\"upload-button\\\">\\n            ADD IMAGE\\n          </label>\\n        </div>\\n\\n        <div className=\\\"image-container\\\">\\n          <div className=\\\"placeholder\\\">\\n            {image ? <img src={URL.createObjectURL(image)} alt=\\\"Uploaded\\\" className=\\\"uploaded-image\\\" /> : \\\"+\\\"}\\n          </div>\\n          <div className=\\\"processed-placeholder\\\">\\n            {processedImage ? <img src={processedImage} alt=\\\"Processed\\\" /> : \\\"Processed image\\\"}\\n          </div>\\n        </div>\\n\\n        <div className=\\\"controls-container\\\">\\n          <button className=\\\"control-button\\\" onClick={() => sendRequest(\\\"analyze\\\")}>\\n            ANALYZE\\n          </button>\\n          <button className=\\\"control-button\\\" onClick={() => sendRequest(\\\"resolution\\\")}>\\n            INCREASE RESOLUTION\\n          </button>\\n        </div>\\n\\n        <div className=\\\"results-container\\\">\\n          <h3>Results</h3>\\n          <pre>{results}</pre>\\n        </div>\\n      </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,a){e.exports=a(24)},18:function(e,t,a){},19:function(e,t,a){},24:function(e,t,a){\"use strict\";a.r(t);var n=a(2),l=a.n(n),c=a(9),o=a.n(c),r=(a(18),a(26));a(19);var s=function(){const[e,t]=Object(n.useState)(null),[a,c]=Object(n.useState)(null),[o,s]=Object(n.useState)(\"Results data\"),i=async t=>{if(!e)return void alert(\"Please upload an image first!\");const a=new FormData;a.append(\"image\",e);try{const e=await r.a.post(\"http://localhost:5000/\".concat(t),a);s(JSON.stringify(e.data,null,2))}catch(n){console.error(n),s(\"Error: Unable to process the request.\")}};return l.a.createElement(\"div\",{className:\"app-container\"},l.a.createElement(\"div\",{className:\"upload-container\"},l.a.createElement(\"input\",{type:\"file\",accept:\"image/*\",onChange:e=>{t(e.target.files[0]),c(null),s(\"\")},style:{display:\"none\"},id:\"file-upload\"}),l.a.createElement(\"label\",{htmlFor:\"file-upload\",className:\"upload-button\"},\"ADD IMAGE\")),l.a.createElement(\"div\",{className:\"image-container\"},l.a.createElement(\"div\",{className:\"placeholder\"},e?l.a.createElement(\"img\",{src:URL.createObjectURL(e),alt:\"Uploaded\",className:\"uploaded-image\"}):\"+\"),l.a.createElement(\"div\",{className:\"processed-placeholder\"},a?l.a.createElement(\"img\",{src:a,alt:\"Processed\"}):\"Processed image\")),l.a.createElement(\"div\",{className:\"controls-container\"},l.a.createElement(\"button\",{className:\"control-button\",onClick:()=>i(\"analyze\")},\"ANALYZE\"),l.a.createElement(\"button\",{className:\"control-button\",onClick:()=>i(\"resolution\")},\"INCREASE RESOLUTION\")),l.a.createElement(\"div\",{className:\"results-container\"},l.a.createElement(\"h3\",null,\"Results\"),l.a.createElement(\"pre\",null,o)))};var i=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,27)).then(t=>{let{getCLS:a,getFID:n,getFCP:l,getLCP:c,getTTFB:o}=t;a(e),n(e),l(e),c(e),o(e)})};o.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(s,null))),i()}},[[10,1,2]]]);","extractedComments":[]}